name: build

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false

env:
  OWNER: ${{ github.repository_owner }}
  FILE: base
  DOCKER_BUILDKIT: 1
  NODE_VERSION: 18.15.0 # renovate: datasource=node depName=node
  BUILDPACK_VERSION: ${{ github.sha }}
  APT_HTTP_PROXY: http://172.17.0.1:8000
  # https://github.com/docker/buildx/releases/tag/v0.10.4
  # we don't want them for test builds
  BUILDX_NO_DEFAULT_ATTESTATIONS: true

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: lint
        run: yarn lint

      - name: shellcheck
        if: ${{ github.event_name != 'merge_group' }}
        uses: reviewdog/action-shellcheck@f52d78284b4941028952125a10c76676c3d456eb # v1.17.0
        with:
          fail_on_error: true
          reporter: github-check
          filter_mode: nofilter
          path: src
          pattern: '*.sh'
          check_all_files_with_shebangs: 'true'

  bats:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Install ubuntu dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y libarchive-tools

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: bats
        run: yarn test:bats

  distro:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        distro:
          - jammy

    env:
      TAG: ${{ matrix.distro }}

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: test distro
        run: docker buildx bake --progress plain test-distro

  lang:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        tag:
          [
            dart,
            dotnet,
            erlang,
            flutter,
            flux,
            golang,
            java,
            jb,
            helm,
            nix,
            node,
            php,
            powershell,
            python,
            ruby,
            rust,
            swift,
            latest,
          ]

    env:
      TAG: ${{ matrix.tag }}

    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: build
        run: docker buildx bake --progress plain

      - name: images
        run: docker image ls

      - name: test
        run: docker buildx bake --progress plain test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  arm64:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: docker-config
        uses: containerbase/internal-tools@47809eda33adec5b2926c5c7e7de8f2602fd3ed3 # v1.15.8
        with:
          command: docker-config
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: build
        run: docker buildx bake --progress plain test-arm64
