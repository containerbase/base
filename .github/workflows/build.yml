name: build

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false

env:
  DRY_RUN: ${{ github.ref_name != 'main' }}
  OWNER: ${{ github.repository_owner }}
  FILE: buildpack
  DOCKER_BUILDKIT: 1
  NODE_VERSION: 16.19.0 # renovate: datasource=node depName=node
  BUILDPACK_VERSION: ${{ github.sha }}
  APT_HTTP_PROXY: http://172.17.0.1:8000

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: lint
        run: yarn lint

      - name: shellcheck
        uses: reviewdog/action-shellcheck@66eb2b135834bedc025f2e23e25598cbcb12b3c5 # v1.16.0
        with:
          fail_on_error: true
          reporter: github-check
          filter_mode: nofilter
          path: src
          pattern: '*.sh'
          check_all_files_with_shebangs: 'true'

  bats:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: bats
        run: yarn test:bats

  distro:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        distro: [jammy, bionic]

    env:
      TAG: ${{ matrix.distro }}

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: test distro
        run: docker buildx bake --progress plain test-distro

  lang:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        tag:
          [
            dart,
            dotnet,
            erlang,
            flutter,
            flux,
            golang,
            java,
            jb,
            helm,
            nix,
            node,
            php,
            powershell,
            python,
            ruby,
            rust,
            swift,
            latest,
          ]

    env:
      TAG: ${{ matrix.tag }}

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: build
        run: docker buildx bake --progress plain

      - name: images
        run: docker image ls

      - name: test
        run: docker buildx bake --progress plain test

  release:
    needs: [lint, bats, lang, distro]
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: docker-config
        uses: renovatebot/internal-tools@4325a65d80eba70e1b7c5d05706e5111c6402843 # v1.14.9
        with:
          command: docker-config

      # full checkout for semantic-release
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'
          npm config set scripts-prepend-node-path true
          echo "CACHE_WEEK=$(date +%U)" >> $GITHUB_ENV

      - name: Docker registry login
        if: github.ref_name == 'main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: semantic-release
        if: github.event_name == 'push'
        run: yarn semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
