name: build

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: false

env:
  OWNER: ${{ github.repository_owner }}
  FILE: base
  BUILDKIT_PROGRESS: plain
  BUILDX_NO_DEFAULT_LOAD: 1
  CONTAINERBASE_VERSION: ${{ github.sha }}
  APT_HTTP_PROXY: http://172.17.0.1:8000
  HUSKY: 0

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          save-cache: true

  lint:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: lint
        run: |
          pnpm eslint -f gha
          pnpm prettier
          pnpm lint:types

      - name: shellcheck
        if: ${{ github.event_name != 'merge_group' }}
        uses: reviewdog/action-shellcheck@ccaafec556ffa154f112bfcb7b9c9574190b7091 # v1.27.0
        with:
          fail_on_error: true
          reporter: github-pr-annotations
          filter_mode: nofilter
          path: |
            src
            .husky
          pattern: |
            *.sh
            *.bats
          check_all_files_with_shebangs: 'true'

  bats:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: Install ubuntu dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y libarchive-tools

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: build
        run: pnpm build

      - name: bats
        run: pnpm test:bats

  vitest:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: vitest
        run: pnpm test:vitest

      - name: Codecov
        if: github.event_name != 'merge_group'
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  base:
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15

    outputs:
      base: ${{ steps.init.outputs.base }}

    steps:
      - name: docker-config
        uses: containerbase/internal-tools@5f8415c0271f12a95af95b75ebbe7d54e7d49cc6 # v3.4.24
        with:
          command: docker-config

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: init
        id: init
        run: |
          export base="ttl.sh/$(uuidgen):1h"
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}
          echo "BASE=${base}" >> ${GITHUB_ENV}
          echo "base=${base}" >> ${GITHUB_OUTPUT}

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: prepare apt proxy
        uses: ./.github/actions/prepare-proxy

      - name: build
        run: pnpm build

      - name: test distro
        run: docker buildx bake --set build-ttl.tags=${{env.BASE}} build-ttl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CONTAINERBASE_CDN: ${{ vars.CONTAINERBASE_CDN }}

  distro:
    runs-on: ubuntu-latest
    needs:
      - bats
      - lint
      - vitest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        distro:
          - focal
          - jammy
          - noble

    env:
      TAG: ${{ matrix.distro }}

    steps:
      - name: docker-config
        uses: containerbase/internal-tools@5f8415c0271f12a95af95b75ebbe7d54e7d49cc6 # v3.4.24
        with:
          command: docker-config

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: prepare apt proxy
        uses: ./.github/actions/prepare-proxy

      - name: build
        run: pnpm build

      - name: test distro
        run: docker buildx bake test-distro --set settings.secrets=type=env,id=GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CONTAINERBASE_CDN: ${{ vars.CONTAINERBASE_CDN }}

  lang:
    runs-on: ubuntu-latest
    needs:
      - base
      - bats
      - lint
      - vitest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        tag:
          - dart
          - dotnet
          - erlang
          - flutter
          - flux
          - golang
          - java
          - jb
          - helm
          - nix
          - node
          - php
          - powershell
          - python
          - ruby
          - rust
          - swift
          - latest

    env:
      TAG: ${{ matrix.tag }}

    steps:
      - name: docker-config
        uses: containerbase/internal-tools@5f8415c0271f12a95af95b75ebbe7d54e7d49cc6 # v3.4.24
        with:
          command: docker-config

      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          show-progress: false

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}
          echo "BASE_IMAGE=${{ needs.base.outputs.base }}" >> ${GITHUB_ENV}

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: prepare apt proxy
        uses: ./.github/actions/prepare-proxy

      - name: test
        run: docker buildx bake test --set settings.secrets=type=env,id=GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # CONTAINERBASE_CDN: ${{ vars.CONTAINERBASE_CDN }}

  # Catch-all required check for test matrix
  test-success:
    needs:
      - distro
      - lang
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: always()
    steps:
      - name: Fail for failed or cancelled distro tests
        if: |
          needs.distro.result == 'failure' ||
          needs.distro.result == 'cancelled'
        run: exit 1

      - name: Fail for failed or cancelled lang tests
        if: |
          needs.lang.result == 'failure' ||
          needs.lang.result == 'skipped'
        run: exit 1
