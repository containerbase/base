name: build-push

on:
  push:
    branches-ignore:
      - gh-readonly-queue/**
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  DRY_RUN: ${{ github.ref_name != github.event.repository.default_branch }}
  OWNER: ${{ github.repository_owner }}
  FILE: base
  BUILDKIT_PROGRESS: plain
  BUILDX_NO_DEFAULT_LOAD: 1
  CONTAINERBASE_VERSION: ${{ github.sha }}
  APT_HTTP_PROXY: http://172.17.0.1:8000

jobs:
  build:
    uses: ./.github/workflows/build.yml
    permissions:
      contents: read
      checks: write
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: docker-config
        uses: containerbase/internal-tools@e7bd2e8cedd99c9b24982865534cb7c9bf88620b # v3.0.55
        with:
          command: docker-config

      # full checkout for semantic-release
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          show-progress: false

      - uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}
          echo "CACHE_WEEK=$(date +%U)" >> $GITHUB_ENV

      - name: ðŸ“¥ Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Docker registry login
        if: github.ref_name == github.event.repository.default_branch
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: prepare apt proxy
        run: sudo pnpm prepare:proxy

      - name: semantic-release
        if: github.event_name == 'push'
        run: pnpm semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
