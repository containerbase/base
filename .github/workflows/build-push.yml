name: build-push

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: docker-config
        uses: renovatebot/internal-tools@4325a65d80eba70e1b7c5d05706e5111c6402843 # v1.14.9
        with:
          command: docker-config

      # full checkout for semantic-release
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # tag=v2.8.1

      - name: init
        run: |
          echo "OWNER=${OWNER,,}" >> ${GITHUB_ENV}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: enable corepack
        run: sudo corepack enable

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'
          npm config set scripts-prepend-node-path true
          echo "CACHE_WEEK=$(date +%U)" >> $GITHUB_ENV

      - name: Docker registry login
        if: github.ref_name == 'main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Installing dependencies
        run: yarn install

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: semantic-release
        if: github.event_name == 'push'
        run: yarn semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
