name: build

on:
  push:
  pull_request:

env:
  DRY_RUN: ${{ github.ref != 'refs/heads/main' }}
  OWNER: ${{ github.repository_owner }}
  FILE: buildpack
  DOCKER_BUILDKIT: 1
  YARN_MODULES_CACHE_KEY: v1
  YARN_PACKAGE_CACHE_KEY: v1
  YARN_CACHE_FOLDER: .cache/yarn
  NODE_VERSION: 14
  APT_HTTP_PROXY: http://172.17.0.1:8000

jobs:
  distro:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}

    timeout-minutes: 15

    strategy:
      matrix:
        distro: [bionic]

    env:
      TAG: ${{ matrix.distro }}

    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4

      - name: Cache Yarn packages
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_PACKAGE_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: test distro
        run: docker buildx bake --progress plain test-distro

  lang:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}

    timeout-minutes: 15

    strategy:
      matrix:
        tag:
          [
            dotnet,
            erlang,
            golang,
            java,
            helm,
            nix,
            node,
            php,
            powershell,
            python,
            ruby,
            rust,
            swift,
            latest,
          ]

    env:
      TAG: ${{ matrix.tag }}

    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4

      - name: Cache Yarn packages
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_PACKAGE_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: build
        run: docker buildx bake --progress plain

      - name: images
        run: docker image ls

      - name: test
        run: docker buildx bake --progress plain test

  release:
    needs: [lang, distro]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.repository_owner != github.event.pull_request.head.repo.owner.login }}

    timeout-minutes: 15

    steps:
      - name: docker-config
        uses: renovatebot/internal-tools@25848ea5993239db66833ceea7c633d6fed2c821 # renovate: tag=v1.7.4
        with:
          command: docker-config

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # renovate: tag=v2.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'
          yarn config set version-git-tag false
          npm config set scripts-prepend-node-path true

      # full checkout for semantic-release
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2.3.4
        with:
          fetch-depth: 0

      - name: Docker registry login
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Cache Yarn packages
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_PACKAGE_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: prepare apt proxy
        run: sudo yarn prepare:proxy

      - name: semantic-release
        if: github.event_name == 'push'
        run: npx semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
