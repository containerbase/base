name: 'Setup Node.js'
description: 'Setup Node and install dependencies using cache'
inputs:
  save-cache:
    description: 'Save cache when needed'
    required: false
    default: 'false'

runs:
  using: 'composite'

  steps:
    - name: ‚öôÔ∏è Calculate `CACHE_KEY`
      shell: bash
      run: |
        echo 'CACHE_KEY=node_modules-${{
          hashFiles('.node-version', 'pnpm-lock.yaml', 'package.json')
        }}' >> "$GITHUB_ENV"

    - name: ‚ôªÔ∏è Restore `node_modules`
      uses: actions/cache/restore@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
      id: node-modules-restore
      with:
        path: node_modules
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true

    - name: Calculate `CACHE_HIT`
      shell: bash
      run: |
        echo 'CACHE_HIT=${{
          (steps.node-modules-restore.outputs.cache-hit == 'true') && 'true' || ''
        }}' >> "$GITHUB_ENV"

    - name: ‚öôÔ∏è Setup pnpm
      uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      with:
        standalone: true

    - name: ‚öôÔ∏è Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        node-version-file: .node-version
        cache: ${{ env.CACHE_HIT != 'true' && 'pnpm' || '' }}

    - name: üì• Install dependencies
      if: env.CACHE_HIT != 'true'
      shell: bash
      run: pnpm install --frozen-lockfile
      env:
        # Other environment variables
        HUSKY: '0' # By default do not run HUSKY install

    - name: ‚ôªÔ∏è Write `node_modules` cache
      if: inputs.save-cache == 'true' && env.CACHE_HIT != 'true'
      uses: actions/cache/save@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
      with:
        path: node_modules
        key: ${{ env.CACHE_KEY }}
        enableCrossOsArchive: true
